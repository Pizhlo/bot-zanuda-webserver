// Code generated by MockGen. DO NOT EDIT.
// Source: ./user.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	model "webserver/internal/model"

	gomock "github.com/golang/mock/gomock"
)

// MockuserRepo is a mock of userRepo interface.
type MockuserRepo struct {
	ctrl     *gomock.Controller
	recorder *MockuserRepoMockRecorder
}

// MockuserRepoMockRecorder is the mock recorder for MockuserRepo.
type MockuserRepoMockRecorder struct {
	mock *MockuserRepo
}

// NewMockuserRepo creates a new mock instance.
func NewMockuserRepo(ctrl *gomock.Controller) *MockuserRepo {
	mock := &MockuserRepo{ctrl: ctrl}
	mock.recorder = &MockuserRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockuserRepo) EXPECT() *MockuserRepoMockRecorder {
	return m.recorder
}

// GetUser mocks base method.
func (m *MockuserRepo) GetUser(tgID int64) (model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", tgID)
	ret0, _ := ret[0].(model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockuserRepoMockRecorder) GetUser(tgID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockuserRepo)(nil).GetUser), tgID)
}

// MockuserCache is a mock of userCache interface.
type MockuserCache struct {
	ctrl     *gomock.Controller
	recorder *MockuserCacheMockRecorder
}

// MockuserCacheMockRecorder is the mock recorder for MockuserCache.
type MockuserCacheMockRecorder struct {
	mock *MockuserCache
}

// NewMockuserCache creates a new mock instance.
func NewMockuserCache(ctrl *gomock.Controller) *MockuserCache {
	mock := &MockuserCache{ctrl: ctrl}
	mock.recorder = &MockuserCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockuserCache) EXPECT() *MockuserCacheMockRecorder {
	return m.recorder
}

// GetUser mocks base method.
func (m *MockuserCache) GetUser(ctx context.Context, tgID int64) (model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", ctx, tgID)
	ret0, _ := ret[0].(model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockuserCacheMockRecorder) GetUser(ctx, tgID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockuserCache)(nil).GetUser), ctx, tgID)
}
