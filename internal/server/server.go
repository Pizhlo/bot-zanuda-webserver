package server

import (
	"context"
	"strings"

	_ "webserver/docs" // docs is generated by Swag CLI, you have to import it.
	"webserver/internal/service/space"
	"webserver/internal/service/user"

	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
	echoSwagger "github.com/swaggo/echo-swagger"
)

type server struct {
	addr string
	e    *echo.Echo

	// services
	space *space.Space
	user  *user.User
}

func New(addr string, space *space.Space, user *user.User) *server {
	return &server{addr: addr, space: space, user: user}
}

func (s *server) Serve() error {
	e := echo.New()

	skipper := func(c echo.Context) bool {
		return strings.Contains(c.Request().URL.Path, "swagger")
	}

	e.Use(middleware.LoggerWithConfig(middleware.LoggerConfig{
		Skipper: skipper,
	}))

	e.Use(middleware.RecoverWithConfig(middleware.RecoverConfig{Skipper: skipper}))

	e.GET("/health", s.health)
	e.GET("/swagger/*", echoSwagger.WrapHandler)

	spaces := e.Group("spaces")

	// notes
	spaces.GET("/:id/notes", s.notesBySpaceID)

	// создание, обновление, удаление
	spaces.POST("/notes/create", s.createNote, s.validateNoteRequest)
	spaces.PATCH("/notes/update", s.updateNote, s.validateNoteRequest)
	spaces.DELETE("/:space_id/notes/:note_id/delete", s.deleteNote)

	// типы заметок
	spaces.GET("/:id/notes/types", s.getNoteTypes)   // получить, какие есть типы заметок
	spaces.GET("/:id/notes/:type", s.getNotesByType) // получить все заметки одного типа

	// поиск
	spaces.POST("/notes/search/text", s.searchNoteByText)

	s.e = e

	return e.Start(s.addr)
}

func (s *server) Shutdown(ctx context.Context) error {
	return s.e.Shutdown(ctx)
}
